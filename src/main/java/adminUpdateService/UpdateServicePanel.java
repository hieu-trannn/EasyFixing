/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package adminUpdateService;

//import repairerCurrentOrder.*;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
//import repairerCustomerFeedback.CustomerFeedback;
//import repairerCurrentOrder.TableActionCellEditor;
//import repairerCurrentOrder.TableActionCellRender;
//import repairerCurrentOrder.TableActionEvent;
import ultis.Database;

/**
 *
 * @author delini
 */
public class UpdateServicePanel extends javax.swing.JPanel {

    private Vector<Integer> workerIDList = new Vector<>();
    private Vector<Integer> serviceIDList = new Vector<>();

    /**
     * Creates new form CurrentOrder
     */
    public UpdateServicePanel() throws SQLException {
//        setUserID(userid);
        initComponents();
        initTable();

    }

    public void initTable() throws SQLException {
        setHeader();

        TableActionEvent event = new TableActionEvent() {
            @Override
            public void onAccept(int row) {
                System.out.println("button pressed");
                int dialogResult = JOptionPane.showConfirmDialog(
                        null,
                        "You will delete all information relevant to this service. You want delete Service?",
                        "Delete Confirm",
                        JOptionPane.YES_NO_OPTION
                );

                // Kiểm tra lựa chọn của người dùng
                if (dialogResult == JOptionPane.YES_OPTION) {

                    // delete in database
                    Database dtb = new Database();
                    Object idValue = tableOrder.getValueAt(row, 0);
                    int serviceId = ((Number) idValue).intValue();
                    System.out.println("serviceID: " + serviceId);
                    try {
                        dtb.deleteService(serviceId);
                        JOptionPane.showMessageDialog(null, "You successfully delete Service! Please login again to see it done");
                        // update frame
                    } catch (SQLException ex) {
                        Logger.getLogger(UpdateServicePanel.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } else {
                    // Người dùng chọn "Không" hoặc đóng hộp thoại
                    System.out.println("You cancel delete");
                }
            }
        };

        Database dtb_query = new Database();
        try {
            Vector<Vector> data = dtb_query.getServiceList();

//            System.out.println(data);
            for (Vector rowData : data) {
                DefaultTableModel model = (DefaultTableModel) tableOrder.getModel();
                model.addRow(new Object[]{rowData.get(0), rowData.get(1), "temp"});
            }
        } catch (SQLException ex) {
            Logger.getLogger(UpdateServicePanel.class.getName()).log(Level.SEVERE, null, ex);
        }

        tableOrder.getColumnModel().getColumn(2).setCellRenderer(new TableActionCellRender());
        tableOrder.getColumnModel().getColumn(2).setCellEditor(new TableActionCellEditor(event));
    }

    public void setHeader() {
        JTableHeader header = tableOrder.getTableHeader();
        header.setFont(new Font("Liberation Sans", Font.BOLD, 22));

        DefaultTableCellRenderer renderer = (DefaultTableCellRenderer) tableOrder.getTableHeader().getDefaultRenderer();
        renderer.setHorizontalAlignment(JLabel.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBorder1 = new swing.PanelBorder();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableOrder = new javax.swing.JTable();
        btnAdd = new swing.NPLinkButton();

        setBackground(new java.awt.Color(255, 255, 255));

        panelBorder1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 55)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Current Fixing Service");

        tableOrder.setFont(new java.awt.Font("Liberation Sans", 0, 18));
        tableOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Service ID","Service Name", "Delete",
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableOrder.setGridColor(new java.awt.Color(255, 255, 255));
        tableOrder.setRowHeight(50);
        tableOrder.setSelectionBackground(new java.awt.Color(250, 233, 190));
        tableOrder.setSelectionForeground(new java.awt.Color(51, 51, 51));
        tableOrder.setShowGrid(false);
        tableOrder.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableOrder);
        if (false){
            if (tableOrder.getColumnModel().getColumnCount() > 0) {
                tableOrder.getColumnModel().getColumn(3).setResizable(false);
                tableOrder.getColumnModel().getColumn(4).setResizable(false);
                tableOrder.getColumnModel().getColumn(4).setPreferredWidth(0);
            }
        }
        else{
            if (tableOrder.getColumnModel().getColumnCount() > 0) {
                tableOrder.getColumnModel().getColumn(0).setResizable(false);
                tableOrder.getColumnModel().getColumn(1).setResizable(false);
                tableOrder.getColumnModel().getColumn(0).setPreferredWidth(0);
            }
        }

        btnAdd.setText("Add Service");
        btnAdd.setBorderColor(new java.awt.Color(87, 173, 97));
        btnAdd.setColorClick(new java.awt.Color(134, 219, 145));
        btnAdd.setColorOver(new java.awt.Color(212, 250, 217));
        btnAdd.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        btnAdd.setRadius(20);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        panelBorder1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelBorder1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelBorder1.setLayer(btnAdd, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1011, Short.MAX_VALUE)
                .addGap(89, 89, 89))
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

//    public void addEventUpdateConfirm(ActionListener event) {
//        btnAdd.addActionListener(event);
//    }
    public void showAddDialog() throws SQLException {
        JTextField newService = new JTextField();

        Object[] messageArray = {"Add New Service: ", newService};

        int option = JOptionPane.showConfirmDialog(
                null,
                messageArray,
                "Admin input",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.PLAIN_MESSAGE
        );

        if (option == JOptionPane.OK_OPTION) {
            if ("".equals(newService.getText())) {
                JOptionPane.showMessageDialog(null, "Please fill up all information!");
                showAddDialog();
            } else {
                Database dtb = new Database();
                dtb.addService(newService.getText());
                JOptionPane.showMessageDialog(null, "You successfully add new service. Please login again to see it!");
            }
        } else {
            System.out.println("cancel add Service");
        }
    }
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        System.out.println("In the add button");
        try {
            showAddDialog();
        } catch (SQLException ex) {
            Logger.getLogger(UpdateServicePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private swing.NPLinkButton btnAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private swing.PanelBorder panelBorder1;
    private javax.swing.JTable tableOrder;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the UserID
     */
//    public int getUserID() {
//        return UserID;
//    }
//
//    /**
//     * @param UserID the UserID to set
//     */
//    public void setUserID(int UserID) {
//        this.UserID = UserID;
//    }
}
