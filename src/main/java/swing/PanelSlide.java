/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package swing;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.Timer;

/**
 *
 * @author delini
 */
public class PanelSlide extends javax.swing.JPanel {

    /**
     * @return the animate
     */
    public int getAnimate() {
        return animate;
    }

    /**
     * @param animate the animate to set
     */
    public void setAnimate(int animate) {
        this.animate = animate;
    }

    /**
     * @return the timer
     */
    public Timer getTimer() {
        return timer;
    }

    /**
     * @param timer the timer to set
     */
    public void setTimer(Timer timer) {
        this.timer = timer;
    }

    /**
     * @return the comExit
     */
    public Component getComExit() {
        return comExit;
    }

    /**
     * @param comExit the comExit to set
     */
    public void setComExit(Component comExit) {
        this.comExit = comExit;
    }

    /**
     * @return the comShow
     */
    public Component getComShow() {
        return comShow;
    }

    /**
     * @param comShow the comShow to set
     */
    public void setComShow(Component comShow) {
        this.comShow = comShow;
    }

    /**
     * @return the currentShowing
     */
    public int getCurrentShowing() {
        return currentShowing;
    }

    /**
     * @param currentShowing the currentShowing to set
     */
    public void setCurrentShowing(int currentShowing) {
        this.currentShowing = currentShowing;
    }

    /**
     * @return the animateRight
     */
    public boolean isAnimateRight() {
        return animateRight;
    }

    /**
     * @param animateRight the animateRight to set
     */
    public void setAnimateRight(boolean animateRight) {
        this.animateRight = animateRight;
    }

    /**
     * Creates new form PanelSlide
     */
    public PanelSlide() {
        initComponents();
        
        timer = new Timer(0, (ActionEvent ae) -> {
            animate();
        });

    }
    
    private int animate = 1;
    private Timer timer;
    private Component comExit;
    private Component comShow;
    private List<Component> list = new ArrayList<>();
    private int currentShowing;
    private boolean animateRight;
    
    //  takes an arbitrary number of Component objects as parameters
    public void init(Component... com) {
        if (com.length > 0) {
            for (Component c : com) {
                list.add(c);
                c.setSize(getSize());
                c.setVisible(false);
                this.add(c);
            }
            //  get first componect to show on panel when init
            Component show = list.get(0);
            show.setVisible(true);
            show.setLocation(0, 0);
        }
    }
  
    public void show(int index) {
        if (!timer.isRunning()) {
            if (list.size() >= 2 && index < list.size() && index != currentShowing) {
                comShow = list.get(index);
                comExit = list.get(currentShowing);
                animateRight = index < currentShowing;
                currentShowing = index;
                comShow.setVisible(true);
                if (animateRight) {
                    comShow.setLocation(-comShow.getWidth(), 0);
                } else {
                    comShow.setLocation(getWidth(), 0);
                }
                timer.start();
            }
        }
    }
    
    private void animate() {
        if (animateRight) {
            if (comShow.getLocation().x < 0) {
                comShow.setLocation(comShow.getLocation().x + animate, 0);
                comExit.setLocation(comExit.getLocation().x + animate, 0);
            } else {
                //  Stop animate
                comShow.setLocation(0, 0);
                timer.stop();
                comExit.setVisible(false);  // or true (login)
            }
        } else {
            if (comShow.getLocation().x > 0) {
                comShow.setLocation(comShow.getLocation().x - animate, 0);
                comExit.setLocation(comExit.getLocation().x - animate, 0);
            } else {
                comShow.setLocation(0, 0);
                timer.stop();
                comExit.setVisible(false);  // or true (login)
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
